name: ARMv8 OpenWrt

on:
  workflow_dispatch:
  schedule:
    - cron: 0 20 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: configs/armv8-plus.config
  DIY_SCRIPT: diy-script.sh
  CLASH_KERNEL: arm64
  CACHE_TOOLCHAIN: false
  UPLOAD_BIN_DIR: false
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: ROOTFS_PLUS
  OPENWRT_RELEASE: true
  OPENWRT_TAG: ARMv8_PLUS
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: Clean Disk Aggressively
      run: |
        echo "🧹 开始强力清理空间"
        docker system prune -a -f --volumes
        sudo journalctl --vacuum-time=1s
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android /opt/ghc $AGENT_TOOLSDIRECTORY
        sudo rm -rf ~/.cache/* /var/log/* /tmp/*
        sudo du -sh /* 2>/dev/null
        df -hT

    - name: Maximize Disk Space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024

    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Setup Build Environment
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y install curl
        sudo -E apt-get -y install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo timedatectl set-timezone "$TZ"
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean

    - name: Clone OpenWrt
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV

    - name: Restore Cache (if enabled)
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workflow }}-${{ github.job }}-${{ github.ref_name }}
        clean: false
        skip: 'dl bin'

    - name: Load Configuration & Prepare
      run: |
        cp $CONFIG_FILE openwrt/.config
        cd openwrt
        make defconfig
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Run Custom Scripts
      run: |
        chmod +x $DIY_SCRIPT
        chmod +x scripts/*.sh
        mv files openwrt/files || true
        mv $CONFIG_FILE openwrt/.config || true
        cd openwrt
        ../$DIY_SCRIPT
        ../scripts/preset-clash-core.sh $CLASH_KERNEL
        ../scripts/preset-terminal-tools.sh

    - name: Download Sources
      run: |
        cd openwrt
        make defconfig
        make download -j4
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Firmware
      run: |
        cd openwrt
        mkdir -p files/etc/uci-defaults
        cp ../scripts/init-settings.sh files/etc/uci-defaults/99-init-settings
        echo "开始编译（使用限制线程避免爆仓）"
        make -j4 || make -j1 V=s
        df -hT

    - name: Save Cache (if enabled)
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workflow }}-${{ github.job }}-${{ github.ref_name }}
        skip: 'dl bin'

    - name: Organize & Compress Output
      run: |
        cd openwrt/bin/targets/*/*
        tar -I 'xz -9' -cf Firmware.tar.xz *
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV

    - name: Upload Firmware to GitHub Release
      uses: ncipollo/release-action@v1
      with:
        name: OpenWrt ARMv8 PLUS
        allowUpdates: true
        tag: ${{ env.FIRMWARE_TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE_PATH }}/Firmware.tar.xz
        body: |
          固件适用于 ARMv8 架构，更多说明请查阅项目页面。
